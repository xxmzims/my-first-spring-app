==========Контроллеры=============
Для чего нужен контроллер?

1. Обмениваться данными с моделью
2. Обрабатывает запросы от пользователя(HTTP-запросы)
3. Показывает пользователю правильное представление
4. Переадресация пользователя на другие страницы

Аннотация @Controller

Наследуется от @Component, а значит spring воспринимает ее как зависимость и работает с ней точно также

Внутри классов, помеченных аннотацией @Controller может быть неограниченное кол-во методов
Обычно, но не всегда каждый метод берет на себя один URL
Обычно, но не всегда, каждый метод возвращает строку название представление, которое надо показать пользователю
У методов может быть любое значение

=======Маппинги=====
 Связывают метод контроллера с адресом, по которому можно обратиться к этому методу (из браузера например)

 Различают 5 видом маппинга - в зависимости от того, какой HTTP запрос(с каким HTTP методом) должен прийти
  в этот метод контроллера

  @GetMapping("/hello-world") - говорит, что мы хотим обрабатывать GET-запросы от пользователя по указанному URl
  @RequestMapping("/people") на уровне класса, означает, что мы хотим, чтобы все методы класса работали с одним указанным url

========Параметры get-запроса===========

Параметры передаются в URl запроса

Параметры представляют собой пары ключ=значение, передаются после символа ?, разделяются знаком &(аспирант).
Пример http://localhost:8080/first/hello?name=maks&surname=ugr

 С помощью аннотации @RequestParam можно обрабатывать переданные в url параметры
 Если параметры не указаны будет вызваны ошибка, чтобы ошибки не было и наши параметры были null,
  следует использовать параметр у аннотации required со значением false
  Пример @RequestParam(value = "name", required = false)

Также для получения параметров можно использовать класс HttpServletRequest и его метод getParam().
В этом случае если в url не указаны параметры, они будут null