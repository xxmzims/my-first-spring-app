================Bean===============
 -Это просто Java-объект

 -Когда Java объекты создаются с помощью Spring'a

 - Бины создаются из Java классов(так же, как и обычные объекты)


 ===============Инверсия управления(Inversion of Control)============
 — это практика объектно-ориентированного программирования,
  при которой управление созданием объектов передаётся контейнеру IOC.

 Это означает, что компоненты зависят только от абстракций других компонентов
  и не несут ответственности за обработку создания зависимых объектов.

 Вместо этого экземпляры объектов предоставляются во время выполнения контейнером
 IOC посредством внедрения зависимостей (DI).

 Преимущества инверсии управления:

 — управление классами и их жизненным циклом;
 — уменьшение связи между классами;
 — повышение согласованности между классами;
 — повышение тестируемости.


================Внедрение зависимостей==============
В Java Spring Framework внедрение зависимостей (Dependency Injection, DI) — это паттерн,
 позволяющий создавать и управлять объектами с помощью контейнера Spring.
  Он помогает уменьшить связь между компонентами, улучшает тестируемость и упрощает конфигурацию.

Существуют основные методы внедрения зависимостей:

1. Внедрение через конструктор: Зависимости передаются через параметры конструктора.
Это гарантирует, что объект всегда создается с необходимыми зависимостями.

2. Внедрение через сеттер: Зависимости устанавливаются с помощью методов-сеттеров.
Этот подход позволяет создавать объект без обязательных зависимостей.
3. Внедрение через поля: Зависимости инъектируются непосредственно в поля объекта.
 Это самый простой способ, но не всегда рекомендуемый, так как усложняет тестирование.